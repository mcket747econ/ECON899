using StatFiles, DelimitedFiles
using Random, Distributions, DataFrames, Parameters, Optim, Plots, LinearAlgebra
pyplot()

cd("C:\\Users\\Rafeh\\Documents\\GitHub\\ECON899\\PS2_JF")
df = DataFrame(load("Mortgage_performance_data.dta"))
# names(df) |> println

##declare matrices
Y::Array{Float64,2} =  df[:,["i_close_0","i_close_1","i_close_2"]]  |> Matrix

X::Array{Float64,2} = df[:,["score_0","rate_spread","i_large_loan", "i_medium_loan","i_refinance","age_r", "cltv", "dti","cu", "first_mort_r",
 "i_FHA","i_open_year2","i_open_year3","i_open_year4","i_open_year5"]] |>Matrix
X = hcat(ones(size(X)[1]),X)

Z::Array{Float64,2} = df[:,["score_0", "score_1", "score_2"]] |>Matrix
 
## Parameters 
β = zeros(size(X)[2]) 
α = 0,-1,-1
γ = [0.3,0.3,0.3]
ρ = 0.5
σ = 1/abs(1-ρ)


## My understanding
T = zeros(size(Y,1))
T[Y[:,1].==1,1] .=1
T[(Y[:,1].==0) .& (Y[:,2].==1),1] .=2
T[((Y[:,1].==0) .& (Y[:,2].==0)) .& (Y[:,3].==1),1] .=3
T[((Y[:,1].==0) .& (Y[:,2].==0)) .& (Y[:,3].==0),1] .=4


##Likelihood funcitons for t∈{2,3,4}
##1-D - T=2
#val1 = $α_0+X_iβ + Z_it γ
#val1 = $α_1+X_iβ + Z_it γ
#val1 = $α_1+X_iβ + Z_it γ

# bound1=α[1]+X[i,:]'*β+Z[i,:]'*γ
# bound2=α[2]+X[i,:]'*β+Z[i,:]'*γ
# bound3=α[3]+X[i,:]'*β+Z[i,:]'*γ

function lfunct1(x,val)
  cdf.(Normal(),(-val-ρ*x)).*
  pdf.(Normal(),(x/σ)/σ)
end 

##2-D - T=3
function lfunct2(x,y,val)
  cdf.(Normal(),(-val-ρ*x)).*
  pdf.(Normal(),(x- ρ*y)).*
  pdf.(Normal(),(y/σ)/σ)
end 

##1-D - T=4
function lfunct3(x,y,val)
  cdf.(Normal(),(val-ρ*x)).*
  pdf.(Normal(),(x- ρ*y)).*
  pdf.(Normal(),(y/σ)/σ)
end 

##transformation functions
function rho(u,b)
  log(u)+b
end
function rhoprime(u)
  1/u
end

##1-D - T=2
function sumlhood1(x,w,α,val0)
  sum = 0
  for j in 1:size(x,1)
    sum+=w[j].*lfunct1(rho(x[j],α[1]+val0),α[2]+val0).*rhoprime(x[j])
  end
  sum
end

## T=3 (2-D)
function sumlhood2(x,w,α,val0)
  sum = 0
  for j in 1:size(x,1)
    # println(rho(x[j,1],val1),", ",rho(x[j,2],val2),", ",rhoprime(x[j,1]),", ",rhoprime(x[j,2])
    sum+=w[j].*lfunct2(rho(x[j,1],α[2]+val0),rho(x[j,2],α[1]+val0),α[3]+val0).*rhoprime(x[j,1]).*rhoprime(x[j,2])
  end
  sum
end

# j= 1
# w2[j].*lfunct3(rho(x2[j,1],α[2]+val0),rho(x2[j,2],α[1]+val0),α[3]+val0).*rhoprime(x2[j,1]).*rhoprime(x2[j,2])
##T=4 (2-D)
function sumlhood3(x,w,α,val0)
  sum = 0
  for j in 1:size(x,1)
    sum+=w[j].*lfunct3(rho(x[j,1],α[2]+val0),rho(x[j,2],α[1]+val0),α[3]+val0).*rhoprime(x[j,1]).*rhoprime(x[j,2])
  end
  sum
end


# for j in 1:5
#   println(x2[j,1])
#   println(rho(x2[j,1],bound1),", ",rho(x2[j,2],bound2),", ",rhoprime(x2[j,1]),", ",rhoprime(x2[j,2]))
#   # w2[j]*lfunct3(rho(x2[j,1],bound1),rho(x2[j,2],bound2),bound3).*rhoprime(x2[j,1]).*rhoprime(x2[j,2]) |>println
# end



k=1
x1 = readdlm("X"*string(k)*".csv",',', Float64)
w1= readdlm("w"*string(k)*".csv",',', Float64)
k=2
x2 = readdlm("X"*string(k)*".csv",',', Float64)
w2 = readdlm("w"*string(k)*".csv",',', Float64)

# PrT = zeros(size(Y,1))
# for i in 1:size(X,1)
#   val0=X[i,:]'*β+Z[i,:]'*γ
#   if T[i]==1
#     PrT[i] = cdf.(Normal(),(α[1]+val0)./σ)
#   end 
#   if T[i]==2
#     PrT[i] = sumlhood1(x1,w1,α,val0)
#   end
#   if T[i]==3
#     PrT[i] = sumlhood2(x2,w2,α,val0)
#   end
#   if T[i]==4
#     PrT[i] = sumlhood3(x2,w2,α,val0)
#   end
# end 
# sum(PrT)
alllhood = function(β)
  PrT = zeros(size(Y,1))
  for i in 1:size(X,1)
    val0=X[i,:]'*β+Z[i,:]'*γ
    if T[i]==1
      PrT[i] = cdf.(Normal(),(-α[1]-val0)./σ)
    end 
    if T[i]==2
      PrT[i] = sumlhood1(x1,w1,α,val0)
    end
    if T[i]==3
      PrT[i] = sumlhood2(x2,w2,α,val0)
    end
    if T[i]==4
      PrT[i] = sumlhood3(x2,w2,α,val0)
    end
  end 
  PrT
end
PrT = alllhood(β)

sumlhood = function(β)
  sum(alllhood(β))
end

optimize(sumlhood,zeros(length(β)))

d = DataFrame(T=T,PrT=PrT)
d = hcat(d,DataFrame(Y,:auto))
##
gd = groupby(d, :T)
c = combine(gd, :PrT => mean)
c[!,:norm] =c[!,:PrT_mean]./sum(c[!,:PrT_mean])
c
gd = groupby(DataFrame(T=T,indic=ones(length(T))), :T)
c = combine(gd, :indic => sum)
c[!,:indic] = c[!,:indic_sum]./sum(c[!,:indic_sum])
c




## Define likelidhood
# alllhood = function(β)
#   PrT = zeros(size(Y,1))
#   for i in 1:size(X,1)
#     val0=X[i,:]'*β+Z[i,:]'*γ
#     if T[i]==1
#       PrT[i] = cdf.(Normal(),(α[1]+val0)./σ)
#     end 
#     if T[i]==2
#       PrT[i] = sumlhood1(x1,w1,α,val0)
#     end
#     if T[i]==3
#       PrT[i] = sumlhood2(x2,w2,α,val0)
#     end
#     if T[i]==4
#       PrT[i] = sumlhood3(x2,w2,α,val0)
#     end
#   end 
#   sum(PrT)
# end
# alllhood(β)

# Res = optimize(alllhood,zeros(length(β)),ones(length(β)))          # println(Res)




##########################
## Not necessary at all ##
##########################
# ## Runs
# ### get all possible sequences
# function SpGrGetSeq(k, j)
#   seq = zeros(1,k);
#   a=j-k;
#   seq[1]=a;
#   fs = seq;
#   c=1;
#   while seq[k]<a
#     if (c==k) 
#         for i=(c-1):-1:1
#             c=i;
#             if (seq[i]!=0)
#               break
#             end
#         end
#     end
#     seq[c] = seq[c]-1;
#     c=c+1;
#     seq[c] = a - sum(seq[1:(c-1)]);
#     if (c<k) 
#         seq[(c+1):k]=zeros(1,k-c);
#     end
#     fs = [fs;seq];
#   end 
#   fs = fs.+1
#   fs
# end

# ## Get kronecker product for combinations of weights/nodes
# ## Not checked
# function SpGrKronProd(n1D,w1D)
#   nodes = n1D[1] ; weights = w1D[1];
#   for j=2:length(n1D)
#     newnodes = n1D[j]
#     nodes = [kron(nodes,ones(size(newnodes,1))) kron(ones(size(nodes,1)),newnodes)]
#     weights = kron(weights,w1D[j])
#   end
# end


# ### runs until point below
# n1D = Array{Int,1}(undef, 4)

# w1D = Vector{AbstractVector}
# R1D = zeros(k);
# function nwspgr(dim,k)
#   sum = true

# n1D = [KPU(level)[1] for level in 1:k] 
# w1D = [KPU(level)[2] for level in 1:k] 
# R1D= [length(w1D[level]) for level in 1:k]
# k = 4 
# dim = k
# nodes = []; 
# weights = [];
# # outer loop over q
# for q = 0:(k-1)
#   r = length(weights);
#   bq = (-1)^(k-q-1) * binomial(dim-1,dim+q-k);
#   is = SpGrGetSeq(dim,dim+q);
#   Rq = prod([R1D[trunc(Int,i)] for i in is],dims=2)
#   sRq = sum(Rq);
#   nodes = append!(nodes,zeros(sRq,dim))
#   # checked to here
#   weights = append!(weights, zeros(sRq))
#   # inner loop collecting product rules
#   for j=1:size(is,1)
#     midx = is(j,:);
#     newn,neww = SpGrKronProd(n1D(midx),w1D(midx));
#     nodes((r+1):(r+Rq(j)),:) = newn;
#     weights((r+1):(r+Rq(j))) = bq .* neww;
#     r = r + Rq(j);
#   end
#   # collect equal nodes: first sort
#   [nodes sortvec] = sortrows(nodes);
#   weights = weights(sortvec);
#   keep = 1; 
#   lastkeep = 1;
#   # then make a list of rows to keep and sum weights of equal nodes
#   for j=2:size(nodes,1)
#     if nodes(j,:)==nodes(j-1,:) 
#         weights(lastkeep)=weights(lastkeep)+weights(j);
#     else
#       lastkeep = j;
#       keep = [keep ; j ];
#     end
#   end
#   # drop equal rows
#   nodes = nodes(keep,:);
#   weights = weights(keep);
# end
#   [nodes sortvec] = sortrows(nodes);
#   weights = weights(sortvec);
# end
# # normalize weights to account for rounding errors
# weights = weights / sum(weights);
# end


# ##runs 
# function KPU(case)
#   if case == 1
#     n = [5.0000000000000000e-001];
#     w = [1.0000000000000000e+000];
#   elseif case == 2
#     n = [5.0000000000000000e-001, 8.8729829999999998e-001];
#     w = [4.4444440000000002e-001, 2.7777780000000002e-001];
#   elseif case == 3
#     n = [5.0000000000000000e-001, 8.8729829999999998e-001];
#     w = [4.4444440000000002e-001, 2.7777780000000002e-001];
#   elseif case == 4
#     n = [5.0000000000000000e-001, 7.1712189999999998e-001, 8.8729829999999998e-001, 9.8024560000000005e-001];
#     w = [2.2545832254583223e-001, 2.0069872006987199e-001, 1.3424401342440134e-001, 5.2328105232810521e-002];
#   elseif case == 5
#     n = [5.0000000000000000e-001, 7.1712189999999998e-001, 8.8729829999999998e-001, 9.8024560000000005e-001];
#     w = [2.2545832254583223e-001, 2.0069872006987199e-001, 1.3424401342440134e-001, 5.2328105232810521e-002];
#   elseif case == 6
#     n = [5.0000000000000000e-001, 7.1712189999999998e-001, 8.8729829999999998e-001, 9.8024560000000005e-001];
#     w = [2.2545832254583223e-001, 2.0069872006987199e-001, 1.3424401342440134e-001, 5.2328105232810521e-002];
#   elseif case == 7
#     n = [5.0000000000000000e-001, 6.1169330000000000e-001, 7.1712189999999998e-001, 8.1055149999999998e-001, 8.8729829999999998e-001, 9.4422960000000000e-001, 9.8024560000000005e-001, 9.9691600000000002e-001];
#     w = [1.1275520000000000e-001, 1.0957840000000001e-001, 1.0031430000000000e-001, 8.5755999999999999e-002, 6.7207600000000006e-002, 4.6463600000000001e-002, 2.5801600000000001e-002, 8.5009000000000005e-003];
#   elseif case == 8
#     n = [5.0000000000000000e-001, 6.1169330000000000e-001, 7.1712189999999998e-001, 8.1055149999999998e-001, 8.8729829999999998e-001, 9.4422960000000000e-001, 9.8024560000000005e-001, 9.9691600000000002e-001];
#     w = [1.1275520000000000e-001, 1.0957840000000001e-001, 1.0031430000000000e-001, 8.5755999999999999e-002, 6.7207600000000006e-002, 4.6463600000000001e-002, 2.5801600000000001e-002, 8.5009000000000005e-003];
#   elseif case == 9
#     n = [5.0000000000000000e-001, 6.1169330000000000e-001, 7.1712189999999998e-001, 8.1055149999999998e-001, 8.8729829999999998e-001, 9.4422960000000000e-001, 9.8024560000000005e-001, 9.9691600000000002e-001];
#     w = [1.1275520000000000e-001, 1.0957840000000001e-001, 1.0031430000000000e-001, 8.5755999999999999e-002, 6.7207600000000006e-002, 4.6463600000000001e-002, 2.5801600000000001e-002, 8.5009000000000005e-003];
#   elseif case == 10
#     n = [5.0000000000000000e-001, 6.1169330000000000e-001, 7.1712189999999998e-001, 8.1055149999999998e-001, 8.8729829999999998e-001, 9.4422960000000000e-001, 9.8024560000000005e-001, 9.9691600000000002e-001];
#     w = [1.1275520000000000e-001, 1.0957840000000001e-001, 1.0031430000000000e-001, 8.5755999999999999e-002, 6.7207600000000006e-002, 4.6463600000000001e-002, 2.5801600000000001e-002, 8.5009000000000005e-003];
#   elseif case == 11
#     n = [5.0000000000000000e-001, 6.1169330000000000e-001, 7.1712189999999998e-001, 8.1055149999999998e-001, 8.8729829999999998e-001, 9.4422960000000000e-001, 9.8024560000000005e-001, 9.9691600000000002e-001];
#     w = [1.1275520000000000e-001, 1.0957840000000001e-001, 1.0031430000000000e-001, 8.5755999999999999e-002, 6.7207600000000006e-002, 4.6463600000000001e-002, 2.5801600000000001e-002, 8.5009000000000005e-003];
#   elseif case == 12
#     n = [5.0000000000000000e-001, 6.1169330000000000e-001, 7.1712189999999998e-001, 8.1055149999999998e-001, 8.8729829999999998e-001, 9.4422960000000000e-001, 9.8024560000000005e-001, 9.9691600000000002e-001];
#     w = [1.1275520000000000e-001, 1.0957840000000001e-001, 1.0031430000000000e-001, 8.5755999999999999e-002, 6.7207600000000006e-002, 4.6463600000000001e-002, 2.5801600000000001e-002, 8.5009000000000005e-003];
#   elseif case == 13
#     n = [5.0000000000000000e-001, 5.5624450000000003e-001, 6.1169330000000000e-001, 6.6556769999999998e-001, 7.1712189999999998e-001, 7.6565989999999995e-001, 8.1055149999999998e-001, 8.5124809999999995e-001, 8.8729829999999998e-001, 9.1836300000000004e-001, 9.4422960000000000e-001, 9.6482740000000000e-001, 9.8024560000000005e-001, 9.9076560000000002e-001, 9.9691600000000002e-001, 9.9954909999999997e-001];
#     w = [5.6377600000000014e-002, 5.5978400000000011e-002, 5.4789200000000017e-002, 5.2834900000000011e-002, 5.0157100000000017e-002, 4.6813600000000004e-002, 4.2878000000000006e-002, 3.8439800000000010e-002, 3.3603900000000006e-002, 2.8489800000000006e-002, 2.3231400000000003e-002, 1.7978600000000004e-002, 1.2903800000000003e-002, 8.2230000000000011e-003, 4.2173000000000011e-003, 1.2724000000000001e-003];
#   elseif case == 14
#     n = [5.0000000000000000e-001, 5.5624450000000003e-001, 6.1169330000000000e-001, 6.6556769999999998e-001, 7.1712189999999998e-001, 7.6565989999999995e-001, 8.1055149999999998e-001, 8.5124809999999995e-001, 8.8729829999999998e-001, 9.1836300000000004e-001, 9.4422960000000000e-001, 9.6482740000000000e-001, 9.8024560000000005e-001, 9.9076560000000002e-001, 9.9691600000000002e-001, 9.9954909999999997e-001];
#     w = [5.6377600000000014e-002, 5.5978400000000011e-002, 5.4789200000000017e-002, 5.2834900000000011e-002, 5.0157100000000017e-002, 4.6813600000000004e-002, 4.2878000000000006e-002, 3.8439800000000010e-002, 3.3603900000000006e-002, 2.8489800000000006e-002, 2.3231400000000003e-002, 1.7978600000000004e-002, 1.2903800000000003e-002, 8.2230000000000011e-003, 4.2173000000000011e-003, 1.2724000000000001e-003];
#   elseif case == 15
#     n = [5.0000000000000000e-001, 5.5624450000000003e-001, 6.1169330000000000e-001, 6.6556769999999998e-001, 7.1712189999999998e-001, 7.6565989999999995e-001, 8.1055149999999998e-001, 8.5124809999999995e-001, 8.8729829999999998e-001, 9.1836300000000004e-001, 9.4422960000000000e-001, 9.6482740000000000e-001, 9.8024560000000005e-001, 9.9076560000000002e-001, 9.9691600000000002e-001, 9.9954909999999997e-001];
#     w = [5.6377600000000014e-002, 5.5978400000000011e-002, 5.4789200000000017e-002, 5.2834900000000011e-002, 5.0157100000000017e-002, 4.6813600000000004e-002, 4.2878000000000006e-002, 3.8439800000000010e-002, 3.3603900000000006e-002, 2.8489800000000006e-002, 2.3231400000000003e-002, 1.7978600000000004e-002, 1.2903800000000003e-002, 8.2230000000000011e-003, 4.2173000000000011e-003, 1.2724000000000001e-003];
#   elseif case == 16
#     n = [5.0000000000000000e-001, 5.5624450000000003e-001, 6.1169330000000000e-001, 6.6556769999999998e-001, 7.1712189999999998e-001, 7.6565989999999995e-001, 8.1055149999999998e-001, 8.5124809999999995e-001, 8.8729829999999998e-001, 9.1836300000000004e-001, 9.4422960000000000e-001, 9.6482740000000000e-001, 9.8024560000000005e-001, 9.9076560000000002e-001, 9.9691600000000002e-001, 9.9954909999999997e-001];
#     w = [5.6377600000000014e-002, 5.5978400000000011e-002, 5.4789200000000017e-002, 5.2834900000000011e-002, 5.0157100000000017e-002, 4.6813600000000004e-002, 4.2878000000000006e-002, 3.8439800000000010e-002, 3.3603900000000006e-002, 2.8489800000000006e-002, 2.3231400000000003e-002, 1.7978600000000004e-002, 1.2903800000000003e-002, 8.2230000000000011e-003, 4.2173000000000011e-003, 1.2724000000000001e-003];
#   elseif case == 17
#     n = [5.0000000000000000e-001, 5.5624450000000003e-001, 6.1169330000000000e-001, 6.6556769999999998e-001, 7.1712189999999998e-001, 7.6565989999999995e-001, 8.1055149999999998e-001, 8.5124809999999995e-001, 8.8729829999999998e-001, 9.1836300000000004e-001, 9.4422960000000000e-001, 9.6482740000000000e-001, 9.8024560000000005e-001, 9.9076560000000002e-001, 9.9691600000000002e-001, 9.9954909999999997e-001];
#     w = [5.6377600000000014e-002, 5.5978400000000011e-002, 5.4789200000000017e-002, 5.2834900000000011e-002, 5.0157100000000017e-002, 4.6813600000000004e-002, 4.2878000000000006e-002, 3.8439800000000010e-002, 3.3603900000000006e-002, 2.8489800000000006e-002, 2.3231400000000003e-002, 1.7978600000000004e-002, 1.2903800000000003e-002, 8.2230000000000011e-003, 4.2173000000000011e-003, 1.2724000000000001e-003];
#   elseif case == 18
#     n = [5.0000000000000000e-001, 5.5624450000000003e-001, 6.1169330000000000e-001, 6.6556769999999998e-001, 7.1712189999999998e-001, 7.6565989999999995e-001, 8.1055149999999998e-001, 8.5124809999999995e-001, 8.8729829999999998e-001, 9.1836300000000004e-001, 9.4422960000000000e-001, 9.6482740000000000e-001, 9.8024560000000005e-001, 9.9076560000000002e-001, 9.9691600000000002e-001, 9.9954909999999997e-001];
#     w = [5.6377600000000014e-002, 5.5978400000000011e-002, 5.4789200000000017e-002, 5.2834900000000011e-002, 5.0157100000000017e-002, 4.6813600000000004e-002, 4.2878000000000006e-002, 3.8439800000000010e-002, 3.3603900000000006e-002, 2.8489800000000006e-002, 2.3231400000000003e-002, 1.7978600000000004e-002, 1.2903800000000003e-002, 8.2230000000000011e-003, 4.2173000000000011e-003, 1.2724000000000001e-003];
#   elseif case == 19
#     n = [5.0000000000000000e-001, 5.5624450000000003e-001, 6.1169330000000000e-001, 6.6556769999999998e-001, 7.1712189999999998e-001, 7.6565989999999995e-001, 8.1055149999999998e-001, 8.5124809999999995e-001, 8.8729829999999998e-001, 9.1836300000000004e-001, 9.4422960000000000e-001, 9.6482740000000000e-001, 9.8024560000000005e-001, 9.9076560000000002e-001, 9.9691600000000002e-001, 9.9954909999999997e-001];
#     w = [5.6377600000000014e-002, 5.5978400000000011e-002, 5.4789200000000017e-002, 5.2834900000000011e-002, 5.0157100000000017e-002, 4.6813600000000004e-002, 4.2878000000000006e-002, 3.8439800000000010e-002, 3.3603900000000006e-002, 2.8489800000000006e-002, 2.3231400000000003e-002, 1.7978600000000004e-002, 1.2903800000000003e-002, 8.2230000000000011e-003, 4.2173000000000011e-003, 1.2724000000000001e-003];
#   elseif case == 20
#     n = [5.0000000000000000e-001, 5.5624450000000003e-001, 6.1169330000000000e-001, 6.6556769999999998e-001, 7.1712189999999998e-001, 7.6565989999999995e-001, 8.1055149999999998e-001, 8.5124809999999995e-001, 8.8729829999999998e-001, 9.1836300000000004e-001, 9.4422960000000000e-001, 9.6482740000000000e-001, 9.8024560000000005e-001, 9.9076560000000002e-001, 9.9691600000000002e-001, 9.9954909999999997e-001];
#     w = [5.6377600000000014e-002, 5.5978400000000011e-002, 5.4789200000000017e-002, 5.2834900000000011e-002, 5.0157100000000017e-002, 4.6813600000000004e-002, 4.2878000000000006e-002, 3.8439800000000010e-002, 3.3603900000000006e-002, 2.8489800000000006e-002, 2.3231400000000003e-002, 1.7978600000000004e-002, 1.2903800000000003e-002, 8.2230000000000011e-003, 4.2173000000000011e-003, 1.2724000000000001e-003];
#   elseif case == 21
#     n = [5.0000000000000000e-001, 5.5624450000000003e-001, 6.1169330000000000e-001, 6.6556769999999998e-001, 7.1712189999999998e-001, 7.6565989999999995e-001, 8.1055149999999998e-001, 8.5124809999999995e-001, 8.8729829999999998e-001, 9.1836300000000004e-001, 9.4422960000000000e-001, 9.6482740000000000e-001, 9.8024560000000005e-001, 9.9076560000000002e-001, 9.9691600000000002e-001, 9.9954909999999997e-001];
#     w = [5.6377600000000014e-002, 5.5978400000000011e-002, 5.4789200000000017e-002, 5.2834900000000011e-002, 5.0157100000000017e-002, 4.6813600000000004e-002, 4.2878000000000006e-002, 3.8439800000000010e-002, 3.3603900000000006e-002, 2.8489800000000006e-002, 2.3231400000000003e-002, 1.7978600000000004e-002, 1.2903800000000003e-002, 8.2230000000000011e-003, 4.2173000000000011e-003, 1.2724000000000001e-003];
#   elseif case == 22
#     n = [5.0000000000000000e-001, 5.5624450000000003e-001, 6.1169330000000000e-001, 6.6556769999999998e-001, 7.1712189999999998e-001, 7.6565989999999995e-001, 8.1055149999999998e-001, 8.5124809999999995e-001, 8.8729829999999998e-001, 9.1836300000000004e-001, 9.4422960000000000e-001, 9.6482740000000000e-001, 9.8024560000000005e-001, 9.9076560000000002e-001, 9.9691600000000002e-001, 9.9954909999999997e-001];
#     w = [5.6377600000000014e-002, 5.5978400000000011e-002, 5.4789200000000017e-002, 5.2834900000000011e-002, 5.0157100000000017e-002, 4.6813600000000004e-002, 4.2878000000000006e-002, 3.8439800000000010e-002, 3.3603900000000006e-002, 2.8489800000000006e-002, 2.3231400000000003e-002, 1.7978600000000004e-002, 1.2903800000000003e-002, 8.2230000000000011e-003, 4.2173000000000011e-003, 1.2724000000000001e-003];
#   elseif case == 23
#     n = [5.0000000000000000e-001, 5.5624450000000003e-001, 6.1169330000000000e-001, 6.6556769999999998e-001, 7.1712189999999998e-001, 7.6565989999999995e-001, 8.1055149999999998e-001, 8.5124809999999995e-001, 8.8729829999999998e-001, 9.1836300000000004e-001, 9.4422960000000000e-001, 9.6482740000000000e-001, 9.8024560000000005e-001, 9.9076560000000002e-001, 9.9691600000000002e-001, 9.9954909999999997e-001];
#     w = [5.6377600000000014e-002, 5.5978400000000011e-002, 5.4789200000000017e-002, 5.2834900000000011e-002, 5.0157100000000017e-002, 4.6813600000000004e-002, 4.2878000000000006e-002, 3.8439800000000010e-002, 3.3603900000000006e-002, 2.8489800000000006e-002, 2.3231400000000003e-002, 1.7978600000000004e-002, 1.2903800000000003e-002, 8.2230000000000011e-003, 4.2173000000000011e-003, 1.2724000000000001e-003];
#   elseif case == 24
#     n = [5.0000000000000000e-001, 5.5624450000000003e-001, 6.1169330000000000e-001, 6.6556769999999998e-001, 7.1712189999999998e-001, 7.6565989999999995e-001, 8.1055149999999998e-001, 8.5124809999999995e-001, 8.8729829999999998e-001, 9.1836300000000004e-001, 9.4422960000000000e-001, 9.6482740000000000e-001, 9.8024560000000005e-001, 9.9076560000000002e-001, 9.9691600000000002e-001, 9.9954909999999997e-001];
#     w = [5.6377600000000014e-002, 5.5978400000000011e-002, 5.4789200000000017e-002, 5.2834900000000011e-002, 5.0157100000000017e-002, 4.6813600000000004e-002, 4.2878000000000006e-002, 3.8439800000000010e-002, 3.3603900000000006e-002, 2.8489800000000006e-002, 2.3231400000000003e-002, 1.7978600000000004e-002, 1.2903800000000003e-002, 8.2230000000000011e-003, 4.2173000000000011e-003, 1.2724000000000001e-003];
#   elseif case == 25
#     n = [5.0000000000000000e-001, 5.2817210000000003e-001, 5.5624450000000003e-001, 5.8411769999999996e-001, 6.1169330000000000e-001, 6.3887490000000002e-001, 6.6556769999999998e-001, 6.9167970000000001e-001, 7.1712189999999998e-001, 7.4180900000000005e-001, 7.6565989999999995e-001, 7.8859789999999996e-001, 8.1055149999999998e-001, 8.3145480000000005e-001, 8.5124809999999995e-001, 8.6987800000000004e-001, 8.8729829999999998e-001, 9.0347029999999995e-001, 9.1836300000000004e-001, 9.3195399999999995e-001, 9.4422960000000000e-001, 9.5518559999999997e-001, 9.6482740000000000e-001, 9.7317140000000002e-001, 9.8024560000000005e-001, 9.8609139999999995e-001, 9.9076560000000002e-001, 9.9434239999999996e-001, 9.9691600000000002e-001, 9.9860309999999997e-001, 9.9954909999999997e-001, 9.9993650000000001e-001];
#     w = [2.8188799999999993e-002, 2.8138799999999992e-002, 2.7989199999999992e-002, 2.7740699999999993e-002, 2.7394599999999995e-002, 2.6952699999999993e-002, 2.6417499999999993e-002, 2.5791599999999994e-002, 2.5078599999999993e-002, 2.4282199999999993e-002, 2.3406799999999995e-002, 2.2457299999999996e-002, 2.1438999999999996e-002, 2.0357799999999995e-002, 1.9219899999999998e-002, 1.8032199999999998e-002, 1.6801899999999998e-002, 1.5536799999999996e-002, 1.4244899999999996e-002, 1.2934799999999996e-002, 1.1615699999999998e-002, 1.0297099999999998e-002, 8.9892999999999987e-003, 7.7033999999999983e-003, 6.4518999999999983e-003, 5.2490999999999987e-003, 4.1114999999999988e-003, 3.0577999999999990e-003, 2.1087999999999997e-003, 1.2894999999999998e-003, 6.3259999999999987e-004, 1.8159999999999997e-004];
#   end
#   return n,w
# end